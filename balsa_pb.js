/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.balsa.AllInfo', null, global);
goog.exportSymbol('proto.balsa.Vector3', null, global);
goog.exportSymbol('proto.balsa.VehicleInfo', null, global);
goog.exportSymbol('proto.balsa.VehicleInfo.CovarianceType', null, global);
goog.exportSymbol('proto.balsa.Waypoint', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.balsa.Vector3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.balsa.Vector3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.balsa.Vector3.displayName = 'proto.balsa.Vector3';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.balsa.Vector3.prototype.toObject = function(opt_includeInstance) {
  return proto.balsa.Vector3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.balsa.Vector3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.Vector3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    y: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    z: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.balsa.Vector3}
 */
proto.balsa.Vector3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.balsa.Vector3;
  return proto.balsa.Vector3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.balsa.Vector3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.balsa.Vector3}
 */
proto.balsa.Vector3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.balsa.Vector3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.balsa.Vector3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.balsa.Vector3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.Vector3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.balsa.Vector3.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.balsa.Vector3.prototype.setX = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.balsa.Vector3.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.balsa.Vector3.prototype.setY = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.balsa.Vector3.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.balsa.Vector3.prototype.setZ = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.balsa.Waypoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.balsa.Waypoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.balsa.Waypoint.displayName = 'proto.balsa.Waypoint';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.balsa.Waypoint.prototype.toObject = function(opt_includeInstance) {
  return proto.balsa.Waypoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.balsa.Waypoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.Waypoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    valid: jspb.Message.getFieldWithDefault(msg, 2, false),
    altitude: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    latitude: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    longitude: +jspb.Message.getFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.balsa.Waypoint}
 */
proto.balsa.Waypoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.balsa.Waypoint;
  return proto.balsa.Waypoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.balsa.Waypoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.balsa.Waypoint}
 */
proto.balsa.Waypoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAltitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.balsa.Waypoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.balsa.Waypoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.balsa.Waypoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.Waypoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAltitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional double time = 1;
 * @return {number}
 */
proto.balsa.Waypoint.prototype.getTime = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.balsa.Waypoint.prototype.setTime = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional bool valid = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.balsa.Waypoint.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.balsa.Waypoint.prototype.setValid = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional double altitude = 3;
 * @return {number}
 */
proto.balsa.Waypoint.prototype.getAltitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.balsa.Waypoint.prototype.setAltitude = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double latitude = 4;
 * @return {number}
 */
proto.balsa.Waypoint.prototype.getLatitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.balsa.Waypoint.prototype.setLatitude = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double longitude = 5;
 * @return {number}
 */
proto.balsa.Waypoint.prototype.getLongitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.balsa.Waypoint.prototype.setLongitude = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.balsa.VehicleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.balsa.VehicleInfo.repeatedFields_, null);
};
goog.inherits(proto.balsa.VehicleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.balsa.VehicleInfo.displayName = 'proto.balsa.VehicleInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.balsa.VehicleInfo.repeatedFields_ = [3,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.balsa.VehicleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.balsa.VehicleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.balsa.VehicleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.VehicleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    droneNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    flightpathList: jspb.Message.toObjectList(msg.getFlightpathList(),
    proto.balsa.Waypoint.toObject, includeInstance),
    velocity: (f = msg.getVelocity()) && proto.balsa.Vector3.toObject(includeInstance, f),
    positionCovarianceList: jspb.Message.getRepeatedFloatingPointField(msg, 5),
    velocityCovarianceList: jspb.Message.getRepeatedFloatingPointField(msg, 6),
    positionCovarianceType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    velocityCovarianceType: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.balsa.VehicleInfo}
 */
proto.balsa.VehicleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.balsa.VehicleInfo;
  return proto.balsa.VehicleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.balsa.VehicleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.balsa.VehicleInfo}
 */
proto.balsa.VehicleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDroneNum(value);
      break;
    case 3:
      var value = new proto.balsa.Waypoint;
      reader.readMessage(value,proto.balsa.Waypoint.deserializeBinaryFromReader);
      msg.addFlightpath(value);
      break;
    case 4:
      var value = new proto.balsa.Vector3;
      reader.readMessage(value,proto.balsa.Vector3.deserializeBinaryFromReader);
      msg.setVelocity(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setPositionCovarianceList(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setVelocityCovarianceList(value);
      break;
    case 7:
      var value = /** @type {!proto.balsa.VehicleInfo.CovarianceType} */ (reader.readEnum());
      msg.setPositionCovarianceType(value);
      break;
    case 8:
      var value = /** @type {!proto.balsa.VehicleInfo.CovarianceType} */ (reader.readEnum());
      msg.setVelocityCovarianceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.balsa.VehicleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.balsa.VehicleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.balsa.VehicleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.VehicleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getDroneNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFlightpathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.balsa.Waypoint.serializeBinaryToWriter
    );
  }
  f = message.getVelocity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.balsa.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getPositionCovarianceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      5,
      f
    );
  }
  f = message.getVelocityCovarianceList();
  if (f.length > 0) {
    writer.writePackedDouble(
      6,
      f
    );
  }
  f = message.getPositionCovarianceType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getVelocityCovarianceType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.balsa.VehicleInfo.CovarianceType = {
  UNKNOWN: 0,
  APPROXIMATED: 1,
  DIAGONAL_KNOWN: 2,
  KNOWN: 3
};

/**
 * optional double time = 1;
 * @return {number}
 */
proto.balsa.VehicleInfo.prototype.getTime = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.balsa.VehicleInfo.prototype.setTime = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional int32 drone_num = 2;
 * @return {number}
 */
proto.balsa.VehicleInfo.prototype.getDroneNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.balsa.VehicleInfo.prototype.setDroneNum = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Waypoint flightpath = 3;
 * @return {!Array<!proto.balsa.Waypoint>}
 */
proto.balsa.VehicleInfo.prototype.getFlightpathList = function() {
  return /** @type{!Array<!proto.balsa.Waypoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.balsa.Waypoint, 3));
};


/** @param {!Array<!proto.balsa.Waypoint>} value */
proto.balsa.VehicleInfo.prototype.setFlightpathList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.balsa.Waypoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.balsa.Waypoint}
 */
proto.balsa.VehicleInfo.prototype.addFlightpath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.balsa.Waypoint, opt_index);
};


proto.balsa.VehicleInfo.prototype.clearFlightpathList = function() {
  this.setFlightpathList([]);
};


/**
 * optional Vector3 velocity = 4;
 * @return {?proto.balsa.Vector3}
 */
proto.balsa.VehicleInfo.prototype.getVelocity = function() {
  return /** @type{?proto.balsa.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.balsa.Vector3, 4));
};


/** @param {?proto.balsa.Vector3|undefined} value */
proto.balsa.VehicleInfo.prototype.setVelocity = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.balsa.VehicleInfo.prototype.clearVelocity = function() {
  this.setVelocity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.balsa.VehicleInfo.prototype.hasVelocity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated double position_covariance = 5;
 * @return {!Array<number>}
 */
proto.balsa.VehicleInfo.prototype.getPositionCovarianceList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/** @param {!Array<number>} value */
proto.balsa.VehicleInfo.prototype.setPositionCovarianceList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.balsa.VehicleInfo.prototype.addPositionCovariance = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.balsa.VehicleInfo.prototype.clearPositionCovarianceList = function() {
  this.setPositionCovarianceList([]);
};


/**
 * repeated double velocity_covariance = 6;
 * @return {!Array<number>}
 */
proto.balsa.VehicleInfo.prototype.getVelocityCovarianceList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/** @param {!Array<number>} value */
proto.balsa.VehicleInfo.prototype.setVelocityCovarianceList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.balsa.VehicleInfo.prototype.addVelocityCovariance = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.balsa.VehicleInfo.prototype.clearVelocityCovarianceList = function() {
  this.setVelocityCovarianceList([]);
};


/**
 * optional CovarianceType position_covariance_type = 7;
 * @return {!proto.balsa.VehicleInfo.CovarianceType}
 */
proto.balsa.VehicleInfo.prototype.getPositionCovarianceType = function() {
  return /** @type {!proto.balsa.VehicleInfo.CovarianceType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.balsa.VehicleInfo.CovarianceType} value */
proto.balsa.VehicleInfo.prototype.setPositionCovarianceType = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional CovarianceType velocity_covariance_type = 8;
 * @return {!proto.balsa.VehicleInfo.CovarianceType}
 */
proto.balsa.VehicleInfo.prototype.getVelocityCovarianceType = function() {
  return /** @type {!proto.balsa.VehicleInfo.CovarianceType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.balsa.VehicleInfo.CovarianceType} value */
proto.balsa.VehicleInfo.prototype.setVelocityCovarianceType = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.balsa.AllInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.balsa.AllInfo.repeatedFields_, null);
};
goog.inherits(proto.balsa.AllInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.balsa.AllInfo.displayName = 'proto.balsa.AllInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.balsa.AllInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.balsa.AllInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.balsa.AllInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.balsa.AllInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.AllInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    multiviList: jspb.Message.toObjectList(msg.getMultiviList(),
    proto.balsa.VehicleInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.balsa.AllInfo}
 */
proto.balsa.AllInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.balsa.AllInfo;
  return proto.balsa.AllInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.balsa.AllInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.balsa.AllInfo}
 */
proto.balsa.AllInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.balsa.VehicleInfo;
      reader.readMessage(value,proto.balsa.VehicleInfo.deserializeBinaryFromReader);
      msg.addMultivi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.balsa.AllInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.balsa.AllInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.balsa.AllInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.balsa.AllInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMultiviList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.balsa.VehicleInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VehicleInfo multiVI = 1;
 * @return {!Array<!proto.balsa.VehicleInfo>}
 */
proto.balsa.AllInfo.prototype.getMultiviList = function() {
  return /** @type{!Array<!proto.balsa.VehicleInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.balsa.VehicleInfo, 1));
};


/** @param {!Array<!proto.balsa.VehicleInfo>} value */
proto.balsa.AllInfo.prototype.setMultiviList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.balsa.VehicleInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.balsa.VehicleInfo}
 */
proto.balsa.AllInfo.prototype.addMultivi = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.balsa.VehicleInfo, opt_index);
};


proto.balsa.AllInfo.prototype.clearMultiviList = function() {
  this.setMultiviList([]);
};


goog.object.extend(exports, proto.balsa);